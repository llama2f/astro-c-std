---
const pagePath=Astro.url.pathname
const isIndexPage = Astro.url.pathname === "/";
const { pageTitle,schema,desc,eyecatch,pubDate,upDate} = Astro.props
const aboutPage = `${Astro.site}about`

console.log(pubDate)
const defSchema = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "WebSite",
    name:  isIndexPage ? import.meta.env.SITE_NAME : `${pageTitle}│${import.meta.env.SITE_NAME}`,
    url: Astro.url,
     author:{
        '@type':'Person',
        name:import.meta.env.AUTHOR_NAME,
        url: aboutPage
      }
});

const schemaAbout = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "ProfilePage",
    name: import.meta.env.SITE_NAME,
    url: Astro.site,
     author:{
        '@type':'Person',
        name:import.meta.env.AUTHOR_NAME,
      },
    dateCreated: pubDate,
    dateModified: upDate,
    mainEntity: {
      "@type": "Person",
      name: import.meta.env.AUTHOR_NAME,
      alternateName: "caori_st",
      description: "WEB制作、イラストレーター",
      image: "../assets/images/noimage.png"
    }
});


const schemaBlog = JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BlogPosting",
    headline: pageTitle,
    image: [
       eyecatch ? eyecatch.src : '../assets/images/noimage.png'
    ],
    datePublished: pubDate,
    dateModified: upDate,
    author: [{
      '@type':'Person',
      name:import.meta.env.AUTHOR_NAME,
      url: aboutPage
    },]
});

let setSchema = defSchema

if(schema == "about"){
 setSchema = schemaAbout
  console.log(`schema: ${schema}`)
}else if(schema == "blog"){
  console.log(`schema: ${schema}`)
  setSchema = schemaBlog
}else{
   console.log(`schema: ${schema}`)
}
---

<script type="application/ld+json" set:html={setSchema }></script>
