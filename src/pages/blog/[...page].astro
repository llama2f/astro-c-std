---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import BlogPost from '@components/BlogPost.astro';
import Tags from '@components/Tags.astro';
import PageNavi from '@components/PageNavi.astro'


//ページ分割生成
export async function getStaticPaths({ paginate }) {
  const pages = await getCollection('blog', ({ data }) => {
  return data.isDraft !== true;
});
const sortedPages = pages.sort((a,b)=>{
  const aDate = new Date(a.data.pubDate)
  const bDate = new Date(b.data.pubDate)
  return bDate - aDate
})
  return paginate(sortedPages, { pageSize: 15 });
}

//全記事数
const allblogPosts =await getCollection('blog', ({ data }) => {
  return data.isDraft !== true;
});
const allpagenum = Object.keys(allblogPosts).length

// All paginated data is passed on the "page" prop
const { page } = Astro.props;

---

<BaseLayout pageTitle=`BlogList ${page.currentPage}` desc='ブログ一覧です'>
  <ul class="pl-0">
    {page.data.map((post) => 
        <BlogPost url={post.slug} title={post.data.title} tags={post.data.tags} pubDate={post.data.pubDate} upDate={post.data.upDate} />    
    )}
  </ul>

  <PageNavi cur_page={page.currentPage} max_page={page.lastPage} base_url="blog" />


    <Tags />
</BaseLayout>